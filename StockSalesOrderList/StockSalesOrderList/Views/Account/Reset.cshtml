@model StockSalesOrderList.Models.ResetViewModel

@{
    ViewBag.Title = "パスワードリセット";
}

@section stylesheet{
    @Styles.Render("~/Content/base")
}
@section script{
    @Scripts.Render("~/Scripts/base")
}

<div class="container">
    <ol class="breadcrumb">
        <li>
            <span class="glyphicon glyphicon-home" aria-hidden="true"></span>
            @Html.ActionLink("Home", "Index", "Home")
        </li>
        <li class="active">
            @ViewBag.Title
        </li>
    </ol>
</div>

<div class="alert alert-info">
    新しいパスワードを入力し、パスワードのリセットを行います。
</div>

@using (Html.BeginForm())
{
    @Html.ValidationSummary(false, "", htmlAttributes: new { @class = "text-warning" })
    @Html.HiddenFor(model => model.Key)
    @Html.HiddenFor(model => model.Token)

    <div class="@Html.ValidateLabelClass(model => model.NewPassword)">
        @Html.LabelFor(model => model.NewPassword, htmlAttributes: new { @class = "control-label label-floating" })
        @Html.PasswordFor(model => model.NewPassword, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.NewPassword, "", htmlAttributes: new { @class = "text-warning" })
        <span class="help-block">@Html.GetModelPropertyName(model => model.NewPassword)を入力してください。</span>
    </div>
    <div class="@Html.ValidateLabelClass(model => model.ConfirmPassword)">
        @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label label-floating" })
        @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", htmlAttributes: new { @class = "text-warning" })
        <span class="help-block">@Html.GetModelPropertyName(model => model.NewPassword)に入力したものをもう一度入力してください。</span>
    </div>
    <div class="form-group">
        <input type="submit" value="パスワードリセット" class="btn btn-raised btn-success" />
    </div>
}
